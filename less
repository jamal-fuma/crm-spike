BASH=/bin/bash
BASH_ARGC=()
BASH_ARGV=()
BASH_LINENO=()
BASH_SOURCE=()
BASH_VERSINFO=([0]="3" [1]="2" [2]="39" [3]="1" [4]="release" [5]="x86_64-pc-linux-gnu")
BASH_VERSION='3.2.39(1)-release'
COLORTERM=gnome-terminal
COLUMNS=80
CONFIG_PROTECT_MASK='/etc/sandbox.d /etc/env.d/java/ /etc/udev/rules.d /etc/fonts/fonts.conf /etc/gconf /etc/terminfo /etc/ca-certificates.conf /etc/revdep-rebuild'
CURRENT_WORK=/home/me/projects/libdtron-0.0.0
CVS_RSH=ssh
DBUS_SESSION_BUS_ADDRESS=unix:abstract=/tmp/dbus-BBLVJlEGt6,guid=5606f25a0db57e035f74bb014a00ab05
DIRSTACK=()
DISPLAY=:0.0
EDITOR=vim
EUID=1000
FIGNORE=.svn:.cvs
GCC_SPECS=
GDK_USE_XFT=1
GLOBIGNORE=.svn:.cvs
GNOME_DESKTOP_SESSION_ID=Default
GNOME_KEYRING_SOCKET=/tmp/keyring-7uo0FQ/socket
GPG_AGENT_INFO=/tmp/gpg-UBVEWj/S.gpg-agent:5386:1
GPG_TTY=/dev/tty1
GROUPS=()
GTK_MODULES=gnomebreakpad
GTK_RC_FILES=/etc/gtk/gtkrc:/home/me/.gtkrc-1.2-gnome2
HG=/usr/bin/hg
HISTCONTROL=ignoreboth
HISTFILE=/home/me/.bash_history
HISTFILESIZE=500
HISTSIZE=500
HOME=/home/me
HOSTNAME=freebie
HOSTTYPE=x86_64
HUSHLOGIN=FALSE
IFS=$' \t\n'
INFOPATH=/usr/share/info:/usr/share/binutils-data/x86_64-pc-linux-gnu/2.18/info:/usr/share/gcc-data/x86_64-pc-linux-gnu/4.1.2/info
JAVAC=/etc/java-config-2/current-system-vm/bin/javac
JAVA_HOME=/etc/java-config-2/current-system-vm
JDK_HOME=/etc/java-config-2/current-system-vm
LANG=
LESS='-R -M --shift 5'
LESSOPEN='|lesspipe.sh %s'
LINES=24
LOGNAME=me
LS_COLORS='rs=0:di=01;34:ln=01;36:hl=44;37:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=01;05;37;41:mi=01;05;37;41:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.lzma=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.rar=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.axv=01;35:*.anx=01;35:*.ogv=01;35:*.ogx=01;35:*.pdf=00;32:*.ps=00;32:*.txt=00;32:*.patch=00;32:*.diff=00;32:*.log=00;32:*.tex=00;32:*.doc=00;32:*.aac=00;36:*.au=00;36:*.flac=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.axa=00;36:*.oga=00;36:*.spx=00;36:*.xspf=00;36:'
MACHTYPE=x86_64-pc-linux-gnu
MAIL=/var/mail/me
MAILCHECK=60
MANPATH=/etc/java-config-2/current-system-vm/man:/usr/local/share/man:/usr/share/man:/usr/share/binutils-data/x86_64-pc-linux-gnu/2.18/man:/usr/share/gcc-data/x86_64-pc-linux-gnu/4.1.2/man:/etc/java-config/system-vm/man/
OMEGA_CO='svn co svn+ssh://jamaln@svn.omegaonline.org.uk/usr/home/svn/repos/omegaonline/ .'
OPENGL_PROFILE=nvidia
OPTERR=1
OPTIND=1
ORBIT_SOCKETDIR=/tmp/orbit-me
OSTYPE=linux-gnu
PAGER=/usr/bin/less
PATH='~/bin/:/usr/local/bin:/usr/bin:/bin:/opt/bin:/usr/x86_64-pc-linux-gnu/gcc-bin/4.1.2:/usr/games/bin'
PIPESTATUS=([0]="0")
PPID=9106
PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME%%.*}:${PWD/$HOME/~}\007"'
PS1='[$(date +%H:%M)]\[\033[1;30m\][\[\033[1;34m\]\u\[\033[1;30m\]@\[\033[0;35m\]\h\[\033[1;30m\]] \[\033[0;37m\]\W \[\033[1;30m\]$\[\033[0m\] '
PS2='> '
PS4='+ '
PWD=/home/me/FumaWeb/webapp
RUBYOPT=-rauto_gem
SESSION_MANAGER=local/freebie:/tmp/.ICE-unix/5423
SHELL=/bin/bash
SHELLOPTS=braceexpand:emacs:hashall:histexpand:history:interactive-comments:monitor
SHLVL=3
SSH_AGENT_PID=5453
SSH_AUTH_SOCK=/tmp/keyring-7uo0FQ/ssh
TERM=xterm
UID=1000
USER=me
WINDOWID=37893676
WINDOWPATH=7
XAUTHORITY=/home/me/.Xauthority
XDG_SESSION_COOKIE=a4c87e25cfbdae94662a9ea949d40cd1-1241557765.443234-642039345
_=set
clock_in_out () 
{ 
    GEN_TIME='puts("#{Time.now} \t#{(Time.now + (60**2*8))}")';
    FMT_ENTRY='s/\([0-9][0-9]:[0-9][0-9]\)\([^\t]*\)/\1 /g';
    ruby -e "$GEN_TIME" | sed -e "$FMT_ENTRY"
}
coloured () 
{ 
    COL_INIT="\033[";
    COL_FINI="\033[0m";
    COL_ONE="$COL_INIT""1;36m";
    COL_TWO="$COL_INIT""1;36;34m";
    if [ -z "$0" ]; then
        echo "need to pass colour index (0 or 1) and word to colour";
        return `false`;
    fi;
    if [ $1 -eq 0 ]; then
        shift;
        echo -e "$COL_ONE" $@ "$COL_FINI";
    else
        shift;
        echo -e "$COL_TWO" $@ "$COL_FINI";
    fi
}
emerge_2_bash () 
{ 
    SED_SCRIPT='s/\([^]]*\)..\([^ ]*\)*.\(.*\)/\2/; /^[a-z]/!d; s//=&/;';
    AWK_SCRIPT='BEGIN { printf "%s\n%s\n %s\n%s\n %s\n", "#!/bin/bash", "die(){", "\techo -e $1;", "\texit `false` ;", "}"; };
/.*/ { print "emerge -v "$0" || die \"emerge failed on"$0"\";"  ; };';
    if [ -z "$1" ]; then
        echo -e "Error: you need to give me a name work from\n";
        return `false`;
    fi;
    sed -e "$SED_SCRIPT" $1 | awk "$AWK_SCRIPT"
}
file_to_c_array () 
{ 
    MAX_COLS=8;
    BYTE_COUNT=4;
    if [ -z "$1" ] || [ ! -f "$1" ]; then
        echo "usage :`basename $0` filename [bytes-per-column] [columns-in-array]";
        echo -e "\\t [bytes-per-column] : defaults to $BYTE_COUNT, acceptable values are 1,2,4,8";
        echo -e "\\t [columns-in-array] : defaults to $MAX_COLS, acceptable values are [1-$MAX_COLS]";
        return `false`;
    fi;
    file_name=`basename $1`;
    bytes_per_col=$2;
    cols=$3;
    arr_name=`echo $file_name | sed -e 's/[ .-]/_/g'`;
    [ -z "$bytes_per_col" ] && bytes_per_col=$BYTE_COUNT;
    ( [ -z "$cols" ] || [ $cols -gt $MAX_COLS ] ) && cols=$MAX_COLS;
    print_header=$(cat<<END_OF_STRING
	# print array name
	BEGIN{ 
		print "/* array generated from hexdump of $file_name */" ;
		print "uint$(($bytes_per_col*8))_t $arr_name[] = \n{";
	};
END_OF_STRING);
    transform_line=$(cat<<'END_OF_STRING'
	# print array contents
	//{
		print $0;
	}; 
END_OF_STRING);
    print_footer=$(cat<<END_OF_STRING
	#print array terminator
	END{
		print "}; /* $arr_name */" ;
	};
END_OF_STRING);
    tag="0x";
    byte_format="\"$tag%0$((2*$bytes_per_col))x, \"";
    line_prefix='"\t"';
    line_format="$cols/$bytes_per_col $byte_format";
    line_suffix='"\n"';
    hexdump -v -e "$line_prefix" -e "$line_format" -e "$line_suffix" $1 | sed -e 's/'$tag' .*//' | awk "$print_header $transform_line $print_footer"
}
gen_c_headers () 
{ 
    STRIP_NL='$!N; s/\n/ /g;';
    APPEND_SEMI='s/)$/);/;';
    SQUEEZE_LINE='s/\(^[ \t]*\)\|\([ \t]*$\)//g;';
    RM_JUNK='/\;\|^[\/*]/!d';
    KEEP_STATIC='/static/!d;';
    LOSE_STATIC='/static/d;';
    SED_SCR="$STRIP_NL $APPEND_SEMI $SQUEEZE_LINE $RM_JUNK";
    case $1 in 
        --static)
            shift 1;
            export SED_SCR="$SED_SCR $KEEP_STATIC"
        ;;
        --non-static)
            shift 1;
            export SED_SCR="$SED_SCR $LOSE_STATIC"
        ;;
        *)
            export SED_SCR="$SED_SCR"
        ;;
    esac;
    for f in $*;
    do
        echo -e '/*' $f '*/\n';
        egrep "^{" $f -B2 | sed -e "$SED_SCR";
    done
}
lsshm-user () 
{ 
    FMT="/`whoami`/!d;s/\(^[^\t ]*\).*/\1/;";
    SED_SCR='1,7N;s/\n/ /; 1,7N; s/\n/ /;1,7N; s/\n/ /;/Share/s/^[^=]*/shmid/;N;s/\n/ /; s/[\t]/ /g; s/^/\t/;';
    clear && reset && stty sane && lsof | head -1;
    for f in `ipcs -m -p | sed -e "$FMT" | sort -u`;
    do
        coloured 0 "`lsof  +c 15 |grep $f`";
        coloured 1 "`ipcs -m -p -i $f | sed -e "$SED_SCR" | sed -e 's/att_time/\n\t&/;'`";
    done
}
make_project_tarball () 
{ 
    if [ -z "$1" ]; then
        echo -e "usage : make_project_tarball dir\n";
        return `false`;
    fi;
    tar -hcvpjf "`yyyy-date`-$1.tar.bz2" $1/ --exclude '.svn' --exclude 'build'
}
mvlower () 
{ 
    if [ -z "$1" ]; then
        echo -e "usage : mvlower [--test] files\n";
        echo -e "--test: show what the names would become\n";
        return `false`;
    fi;
    if [ "$1" == '--test' ]; then
        export MV="echo";
        shift 1;
    else
        export MV="mv -v";
    fi;
    for f in $@;
    do
        $MV "$f" `echo $f | tr "[:upper:]" "[:lower:]"`;
    done
}
strip_crap () 
{ 
    SED_SCR='s/[(].*[)]//g;s/_.mp3/.mp3/g;s/_[_]*/_/g';
    if [ -z "$1" ]; then
        echo -e "usage : strip_crap [--test] files\n";
        echo -e "--test: show what the names would become\n";
        return `false`;
    fi;
    if [ "$1" == '--test' ]; then
        export MV="echo";
        shift 1;
    else
        export MV="mv -v";
    fi;
    for f in $@;
    do
        $MV "$f" `echo $f | sed -e "s/[&' ,-]/_/g" -e "$SED_SCR" | tr "[:upper:]" "[:lower:]"`;
    done
}
totem_playlist () 
{ 
    I=0;
    if [ -z "$1" ]; then
        echo -e "usage : totem_playlist name dir\n";
        echo -e "Error: you need to give me a name to use\n";
        return `false`;
    fi;
    if [ -z "$2" ]; then
        echo -e "usage : totem_playlist name dir\n";
        echo -e "Error: you need to give me a directory to search\n";
        return `false`;
    fi;
    echo -e "[playlist]\nNumberOfEntries=XX" > $1;
    find $2 -name '*.mp3' -type f -print | nl | sed -e 's/^[ ]*\([0-9]*\)./File\1=/' >> $1;
    export I=`wc -l $1 | sed -e 's/[^0-9]*//g'`;
    export I=$(($I -2));
    sed -e "2s/XX/$I/" -i $1
}
visit_files () 
{ 
    if [ -z "$2" ] || [ ! -d "$1" ]; then
        echo -e "usage : visit_files dir pattern\n";
        echo -e "dir: directory files are under\n";
        echo -e "pattern: this is a egrep regexp\n";
        echo -e "operation: this defaults to echo\n";
        return `false`;
    fi;
    export op=$3;
    [ -z "$op" ] && export op=echo;
    files=$(find "$1" -name '.svn' -prune -o -exec grep "$2" "{}" --line-number -H ";"                 | sed -e "/$2/"'!d'                 | awk -F : '{print $1;}'                 | sort -u);
    for f in $files;
    do
        $op $f;
    done
}
